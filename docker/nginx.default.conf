# server {
#     listen 80;
#     root /var/www/html/public;

#     add_header X-Frame-Options "SAMEORIGIN";
#     add_header X-Content-Type-Options "nosniff";

#     index index.php index.html;
#     charset utf-8;

#     location = /favicon.ico { access_log off; log_not_found off; }
#     location = /robots.txt  { access_log off; log_not_found off; }

#     error_page 404 /index.php;

#     location ~ \.php$ {
#         try_files $uri =404;
#         fastcgi_split_path_info ^(.+\.php)(/.+)$;
#         fastcgi_pass unix:/var/run/php-fpm.sock;
#         # fastcgi_pass 127.0.0.1:9000;
#         fastcgi_index index.php;
#         include fastcgi_params;
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         fastcgi_param PATH_INFO $fastcgi_path_info;
#         fastcgi_intercept_errors on;

# 		fastcgi_buffer_size 128k;
# 		fastcgi_buffers 256 16k;
# 		fastcgi_busy_buffers_size 256k;
# 		fastcgi_temp_file_write_size 256k;
# 		fastcgi_read_timeout 240;

# 		# # Setup var defaults
# 		# set $no_cache "";
# 		# # If non GET/HEAD, don't cache & mark user as uncacheable for 1 second via cookie
# 		# if ($request_method !~ ^(GET|HEAD|POST)$) {
# 		# 	set $no_cache "1";
# 		# }
# 		# # Drop no cache cookie if need be
# 		# # (for some reason, add_header fails if included in prior if-block)
# 		# if ($no_cache = "1") {
# 		# 	add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
# 		# 	add_header X-Microcachable "0";
# 		# }
# 		# # Bypass cache if no-cache cookie is set
# 		# if ($http_cookie ~* "_mcnc") {
# 		# 			set $no_cache "1";
# 		# }
# 		# # Bypass cache if flag is set
# 		# fastcgi_no_cache $no_cache;
# 		# fastcgi_cache_bypass $no_cache;
# 		# fastcgi_cache microcache;
# 		# fastcgi_cache_key $scheme$host$request_uri$request_method;
# 		# fastcgi_cache_valid 200 301 302 10m;
# 		# fastcgi_cache_use_stale updating error timeout invalid_header http_500;
# 		# fastcgi_pass_header Set-Cookie;
# 		# fastcgi_pass_header Cookie;
# 		# fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
# 		}

#     location / {
#         try_files $uri $uri/ /index.php?$query_string;
#         gzip_static on;
# 	}

# 	location ~*  \.(jpg|jpeg|png|gif|ico)$ {
# 		log_not_found off;
# 		access_log off;
# 	}

# }

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    # Add index.php to setup Nginx, PHP & PHP-FPM config
    index index.php index.html index.htm index.nginx-debian.html;    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/lab/public;
    # pass PHP scripts on Nginx to FastCGI (PHP-FPM) server
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # Nginx php-fpm config:
        fastcgi_pass unix:/var/run/php-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;

    }
    client_max_body_size 15M;
    server_tokens off;

     # Hide PHP headers
    fastcgi_hide_header X-Powered-By;
    fastcgi_hide_header X-CF-Powered-By;
    fastcgi_hide_header X-Runtime;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
        gzip_static on;
    }
  # deny access to Apache .htaccess on Nginx with PHP,
  # if Apache and Nginx document roots concur
  location ~ /\.ht    {deny all;}
	location ~ /\.svn/  {deny all;}
	location ~ /\.git/  {deny all;}
	location ~ /\.hg/   {deny all;}
	location ~ /\.bzr/  {deny all;}
}